// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ==============================================================

// AXI4LiteS
// 0x00 : Control signals
//        bit 0  - ap_start (Read/Write/COH)
//        bit 1  - ap_done (Read/COR)
//        bit 2  - ap_idle (Read)
//        bit 3  - ap_ready (Read)
//        bit 7  - auto_restart (Read/Write)
//        others - reserved
// 0x04 : Global Interrupt Enable Register
//        bit 0  - Global Interrupt Enable (Read/Write)
//        others - reserved
// 0x08 : IP Interrupt Enable Register (Read/Write)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x0c : IP Interrupt Status Register (Read/TOW)
//        bit 0  - Channel 0 (ap_done)
//        bit 1  - Channel 1 (ap_ready)
//        others - reserved
// 0x10 : reserved
// 0x14 : Data signal of d_locations_addr
//        bit 31~0 - d_locations_addr[31:0] (Read/Write)
// 0x18 : reserved
// 0x1c : Data signal of d_distances_addr
//        bit 31~0 - d_distances_addr[31:0] (Read/Write)
// 0x20 : reserved
// 0x24 : Data signal of numRecords
//        bit 31~0 - numRecords[31:0] (Read/Write)
// 0x28 : reserved
// 0x2c : Data signal of lat
//        bit 31~0 - lat[31:0] (Read/Write)
// 0x30 : reserved
// 0x34 : Data signal of lng
//        bit 31~0 - lng[31:0] (Read/Write)
// 0x38 : reserved
// 0x3c : Data signal of gridDim_x
//        bit 31~0 - gridDim_x[31:0] (Read/Write)
// 0x40 : reserved
// 0x44 : Data signal of gridDim_y
//        bit 31~0 - gridDim_y[31:0] (Read/Write)
// 0x48 : reserved
// 0x4c : Data signal of blockDim_x
//        bit 31~0 - blockDim_x[31:0] (Read/Write)
// 0x50 : reserved
// 0x54 : Data signal of blockDim_y
//        bit 31~0 - blockDim_y[31:0] (Read/Write)
// 0x58 : reserved
// 0x5c : Data signal of en_fcuda1
//        bit 31~0 - en_fcuda1[31:0] (Read/Write)
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XFCUDA_AXI4LITES_ADDR_AP_CTRL               0x00
#define XFCUDA_AXI4LITES_ADDR_GIE                   0x04
#define XFCUDA_AXI4LITES_ADDR_IER                   0x08
#define XFCUDA_AXI4LITES_ADDR_ISR                   0x0c
#define XFCUDA_AXI4LITES_ADDR_D_LOCATIONS_ADDR_DATA 0x14
#define XFCUDA_AXI4LITES_BITS_D_LOCATIONS_ADDR_DATA 32
#define XFCUDA_AXI4LITES_ADDR_D_DISTANCES_ADDR_DATA 0x1c
#define XFCUDA_AXI4LITES_BITS_D_DISTANCES_ADDR_DATA 32
#define XFCUDA_AXI4LITES_ADDR_NUMRECORDS_DATA       0x24
#define XFCUDA_AXI4LITES_BITS_NUMRECORDS_DATA       32
#define XFCUDA_AXI4LITES_ADDR_LAT_DATA              0x2c
#define XFCUDA_AXI4LITES_BITS_LAT_DATA              32
#define XFCUDA_AXI4LITES_ADDR_LNG_DATA              0x34
#define XFCUDA_AXI4LITES_BITS_LNG_DATA              32
#define XFCUDA_AXI4LITES_ADDR_GRIDDIM_X_DATA        0x3c
#define XFCUDA_AXI4LITES_BITS_GRIDDIM_X_DATA        32
#define XFCUDA_AXI4LITES_ADDR_GRIDDIM_Y_DATA        0x44
#define XFCUDA_AXI4LITES_BITS_GRIDDIM_Y_DATA        32
#define XFCUDA_AXI4LITES_ADDR_BLOCKDIM_X_DATA       0x4c
#define XFCUDA_AXI4LITES_BITS_BLOCKDIM_X_DATA       32
#define XFCUDA_AXI4LITES_ADDR_BLOCKDIM_Y_DATA       0x54
#define XFCUDA_AXI4LITES_BITS_BLOCKDIM_Y_DATA       32
#define XFCUDA_AXI4LITES_ADDR_EN_FCUDA1_DATA        0x5c
#define XFCUDA_AXI4LITES_BITS_EN_FCUDA1_DATA        32

